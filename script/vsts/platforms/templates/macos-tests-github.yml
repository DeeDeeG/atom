jobs:
  - job: macOS_tests_github
    displayName: macOS Tests github
    dependsOn: macOS_build
    timeoutInMinutes: 180
    pool:
      vmImage: macos-10.15
    variables:
      ATOM_RESOURCE_PATH: $(Build.SourcesDirectory)
      CI: true
      CI_PROVIDER: VSTS
      MOCHA_TIMEOUT: 60000
      UNTIL_TIMEOUT: 30000
    steps:
      - template: ./preparation.yml

      - template: ./cache.yml
        parameters:
          OS: macos

      # The artifact caching task does not work on forks, so we need to
      # bootstrap again for pull requests coming from forked repositories.
      - template: ./bootstrap.yml

      - template: ./download-unzip.yml
        parameters:
          artifacts:
            - atom-mac.zip
            - atom-mac-symbols.zip

      - pwsh: |
          echo "CI env var is set to: $env:CI"
          echo "MOCHA_TIMOUT env var is set to: $env:MOCHA_TIMEOUT"
          echo "UNTIL_TIMOUT env var is set to: $env:UNTIL_TIMEOUT"
          Set-Variable -Name "timesTriedToTest" -Value 0

          echo "At: before the while loop"
          # Try testing up to 6 times if any tests fail
          while ( $timesTriedToTest -lt 6 ) {
            echo "At: inside the while loop body"
            echo "Running tests for the github package"
            if ( $timesTriedToTest -gt 0 ) {
              echo "At: inside the if block when timesTriedToTest is greater than zero"
              echo "Attempt number: $timesTriedToTest + 1"
            }

            $(Build.SourcesDirectory)/out/Atom*.app/Contents/MacOS/Atom* --resource-path $(Build.SourcesDirectory) --main-process --test $(Build.SourcesDirectory)/spec/main-process

            if ( $LastExitCode -ne 0 ) {
              echo "At: inside the if LastExitCode does not equal zero block"
              # Try again if tests failed
              $timesTriedToTest++
              continue
            } else {
              echo "At: inside the else block before breaking out of the loop"
              # Exit the loop if tests passed
              break
            }
          }
          echo "At: After the while loop"
        errorActionPreference: continue
        displayName: Run tests
        condition: and(succeeded(), ne(variables['Atom.SkipTests'], 'true'))
